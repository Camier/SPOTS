#!/bin/bash
# StarCoder pre-commit hook for code review

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}🤖 Running StarCoder pre-commit review...${NC}"

# Get the directory where starcoder commands are installed
STARCODER_DIR="$(cd "$(dirname "$0")/.." && pwd)"
STARCODER_CMD="$STARCODER_DIR/starcoder_commands.sh"

# Check if StarCoder commands are available
if [[ ! -f "$STARCODER_CMD" ]]; then
    echo -e "${YELLOW}⚠️  StarCoder commands not found, skipping review${NC}"
    exit 0
fi

# Get list of files to be committed
FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(py|js|java|go|rs|cpp|c|php|rb|swift)$')

if [[ -z "$FILES" ]]; then
    echo "No code files to review"
    exit 0
fi

# Track issues found
ISSUES_FOUND=0
SECURITY_ISSUES=0

# Review each file
for file in $FILES; do
    if [[ ! -f "$file" ]]; then
        continue
    fi
    
    echo -e "\n📄 Reviewing $file..."
    
    # Quick security check with rapid model
    SECURITY_CHECK=$(echo "Check for security issues (respond YES/NO only):" | \
        cat - "$file" | \
        ollama run starcoder2:3b 2>/dev/null | \
        head -1)
    
    if [[ "$SECURITY_CHECK" =~ [Yy][Ee][Ss] ]]; then
        echo -e "${RED}⚠️  Potential security issue detected!${NC}"
        
        # Get detailed analysis
        DETAILED=$(bash "$STARCODER_CMD" review "$file" -f security 2>/dev/null)
        echo "$DETAILED" | grep -E "(vulnerability|injection|security|unsafe)" | head -5
        
        SECURITY_ISSUES=$((SECURITY_ISSUES + 1))
        
        # Ask for confirmation
        read -p "Continue with commit despite security concerns? (y/n) " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
    
    # Check for common issues
    ISSUES=$(git diff --cached "$file" | \
        ollama run starcoder2:3b "List code issues (bugs/style) in this diff, one per line:" 2>/dev/null | \
        grep -E "(bug|error|issue|problem|fix)" | \
        head -3)
    
    if [[ -n "$ISSUES" ]]; then
        echo -e "${YELLOW}📝 Issues found:${NC}"
        echo "$ISSUES"
        ISSUES_FOUND=$((ISSUES_FOUND + 1))
    else
        echo -e "${GREEN}✅ No major issues detected${NC}"
    fi
done

# Summary
echo -e "\n📊 Pre-commit Summary:"
echo "Files reviewed: $(echo "$FILES" | wc -l)"
echo "Issues found: $ISSUES_FOUND"
echo "Security concerns: $SECURITY_ISSUES"

# Optional: Generate commit message suggestion
if [[ $(echo "$FILES" | wc -l) -gt 0 ]]; then
    echo -e "\n💡 Suggested commit message:"
    git diff --cached --name-only | \
        xargs -I {} basename {} | \
        paste -sd, - | \
        xargs -I {} echo "Updated: {}" | \
        ollama run starcoder2:3b "Generate a concise commit message for these changes:" 2>/dev/null | \
        head -1
fi

# Exit with success (non-blocking by default)
# Change to 'exit 1' to block commits with issues
exit 0